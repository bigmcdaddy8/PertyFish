Diagnostics As screen:

    conEntireScreenDiagnostics As groupContainer.manualLayoutContainer:
        Height: =Parent.Height
        Width: =Parent.Width
        ZIndex: =1

        lblUDFDiagnosticsResult As label:
            Font: =Font.'Courier New'
            Height: =40 * 3
            Size: =10
            Text: =lUDF_DIAGNOSTICS_RESULT
            VerticalAlign: =VerticalAlign.Top
            Width: =1000
            X: =btnRunUDFDiagnostics.X + btnRunUDFDiagnostics.Width + 10
            Y: =btnRunUDFDiagnostics.Y
            ZIndex: =1

        btnRunUDFDiagnostics As button:
            OnSelect: |-
                =
                
                
                If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                    Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                        " btnRunUDFDiagnostics.OnSelect(): entered"
                        
                    })
                );
                
                UpdateContext({lTEST_FAILURE_DETECTED: false});
                UpdateContext({lUDF_DIAGNOSTICS_RESULT: "RUNNING..."});
                
                If(!lTEST_FAILURE_DETECTED,
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getQUEENAttackerSqNames"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum("c6")});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "b7"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getQUEENAttackerSqNames(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): lTEST_TEST_CATEGORY test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getAttackerSqNamesSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum("c6")});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "b7 d7"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getAttackerSqNamesSet(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): lTEST_TEST_CATEGORY test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getSqNumAttackersMaterialCentipawn"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum("c6")});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: -100});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getSqNumAttackersMaterialCentipawn(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): lTEST_TEST_CATEGORY test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(lTEST_FAILURE_DETECTED,
                    // THEN
                    If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                        Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                            " btnRunUDFDiagnostics.OnSelect(): FAILURE " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER
                        })
                    );
                    UpdateContext({lUDF_DIAGNOSTICS_RESULT: "FAILURE " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER}),
                
                    // ELSE
                    UpdateContext({lUDF_DIAGNOSTICS_RESULT: "PASSED"})
                );
                
                If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                    Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                        " btnRunUDFDiagnostics.OnSelect(): exiting"
                        
                    })
                );
                
                
                /*
                                        If(gblPF_TMP_Boolean01,
                                            // THEN
                                            Set(gblPF_TMP_Number01, gblPF_TMP_Number01 + 10);
                                            Set(gblPF_TMP_Text01, "8/2p3p1/1b1r1q1k/8/8/K1Q1R1B1/1P3P2/8 w - - 0 1");
                                            If(UDF_isSqNumPAWNProtected(
                                                gblPF_TMP_Text01, 
                                                UDF_sqNameToSqNum("b6"), 
                                                UDF_FEN_TO_INACTIVE_COLOR(gblPF_TMP_Text01)),
                                                // THEN - test passed
                                                Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                                    " btnUDF_Tests_Set2_Code_CB.OnSelect(): test #" & gblPF_TMP_Number01 & " PASSED"
                                                    
                                                }),
                                        
                                                // ELSE - test failed
                                                Set(gblPF_TMP_Boolean01, false);
                                                Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") & 
                                                    " btnUDF_Tests_Set2_Code_CB.OnSelect(): test #" & gblPF_TMP_Number01 & " FAILED"
                                                })
                                            );
                                        
                                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                                " test #" & gblPF_TMP_Number01 & " DEBUG " &
                                                " UDF_getSqNumRelativeToSqNum(b6,1,1): " & UDF_getSqNumRelativeToSqNum(UDF_sqNameToSqNum("b6"),-1,1) &
                                                " UDF_getBitAtSqNum(): " &
                                                    UDF_getBitAtSqNum(
                                                        UDF_FEN_TO_BOARD(gblPF_TMP_Text01),
                                                        UDF_getSqNumRelativeToSqNum(UDF_sqNameToSqNum("b6"),-1,1)
                                                    ) &
                                                " UDF_getSqNumRelativeToSqNum(b6,1,1): " & UDF_getSqNumRelativeToSqNum(UDF_sqNameToSqNum("b6"),1,1) &
                                                " UDF_getBitAtSqNum(): " & 
                                                    UDF_getBitAtSqNum(
                                                        UDF_FEN_TO_BOARD(gblPF_TMP_Text01),
                                                        UDF_getSqNumRelativeToSqNum(UDF_sqNameToSqNum("b6"),1,1)
                                                    )
                                            });
                                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") & 
                                                " DEBUG fen: " & LF & gblPF_TMP_Text01
                                            });
                                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") & 
                                                " DEBUG UDF_FEN_TO_BOARD(fen): " & LF & UDF_FEN_TO_BOARD(gblPF_TMP_Text01)
                                            })
                                        );
                 */
            Size: =10
            Text: ="Run UDF Diagnostics"
            X: =40
            Y: =40
            ZIndex: =2

        Button2 As button:
            OnSelect: =Navigate(Chess_Board)
            Size: =12
            Text: ="Goto Chess Board"
            X: =1200
            Y: =664
            ZIndex: =3

        Button2_1 As button:
            OnSelect: =Navigate(Logging_Screen)
            Size: =12
            Text: ="Goto Logs"
            X: =1200
            Y: =715
            ZIndex: =4

