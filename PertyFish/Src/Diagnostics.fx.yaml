Diagnostics As screen:

    conEntireScreenDiagnostics As groupContainer.manualLayoutContainer:
        Height: =Parent.Height
        Width: =Parent.Width
        ZIndex: =1

        lblUDFDiagnosticsResult As label:
            Font: =Font.'Courier New'
            Height: =40 * 3
            Size: =10
            Text: =lUDF_DIAGNOSTICS_RESULT
            VerticalAlign: =VerticalAlign.Top
            Width: =1000
            X: =btnRunUDFDiagnostics.X + btnRunUDFDiagnostics.Width + 10
            Y: =btnRunUDFDiagnostics.Y
            ZIndex: =1

        btnRunUDFDiagnostics As button:
            OnSelect: |
                =
                
                If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                    Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                        " btnRunUDFDiagnostics.OnSelect(): entered"
                        
                    })
                );
                
                UpdateContext({lTEST_FAILURE_DETECTED: false});
                UpdateContext({lUDF_DIAGNOSTICS_RESULT: "RUNNING..."});
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getFileNumFromFileName(file:Text):Number=Find(file,"abcdefgh");
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getFileNumFromFileName"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                    UpdateContext({lTEST_FILE_NAME: "c"});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 3});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getFileNumFromFileName(lTEST_FILE_NAME)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getFileNameFromFileNum(fileNum:Number):Text=Index(["a","b","c","d","e","f","g","h"], fileNum).Value;
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getFileNumFromFileName"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                    UpdateContext({lTEST_FILE_NUM: 3});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "c"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getFileNameFromFileNum(lTEST_FILE_NUM)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getFileNameFromSqName(sqName:Text):Text=Left(sqName,1);
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getFileNameFromSqName"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "c"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getFileNameFromSqName(lTEST_REFERENCE_SQNAME)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getFileNumFromSqName(sqName:Text):Number=Find(UDF_getFileNameFromSqName(sqName),"abcdefgh");
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getFileNumFromSqName"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 3});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getFileNumFromSqName(lTEST_REFERENCE_SQNAME)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getFileNumFromSqNum(sqNum:Number):Number=UDF_getFileNumFromSqName(UDF_sqNumToSqName(sqNum));
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getFileNumFromSqNum"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 3});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getFileNumFromSqNum(lTEST_REFERENCE_SQNUM)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getFileNameFromSqNum(sqNum:Number):Text=Index(Split("abcdefgh",""),Mod(sqNum,8)+1).Value;
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getFileNameFromSqNum"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "c"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getFileNameFromSqNum(lTEST_REFERENCE_SQNUM)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getRankFromSqName(sqName:Text):Number=Value(Right(Left(sqName,2),1));
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getRankFromSqName"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 6});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getRankFromSqName(lTEST_REFERENCE_SQNAME)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getRankFromSqNum(sqNum:Number):Number=(8 - RoundDown(sqNum/8, 0));
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getRankFromSqNum"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 6});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getRankFromSqNum(lTEST_REFERENCE_SQNUM)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_sqNameToSqNum(sqName:Text):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_sqNameToSqNum"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 18});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_sqNumToSqName(sqNum:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_sqNumToSqName"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: 18});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "c6"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_sqNumToSqName(lTEST_REFERENCE_SQNUM)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getSqNumRelativeToSqNum(refSqNum:Number,x:Number,y:Number):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getSqNumRelativeToSqNum"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 27});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getSqNumRelativeToSqNum(lTEST_REFERENCE_SQNUM, 1, -1)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_sqNameNoPromo(sqName:Text):Text=Left(sqName,2);
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_sqNameNoPromo"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6q"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "c6"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_sqNameNoPromo(lTEST_REFERENCE_SQNAME)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getPromo(sqName:Text):Text=If(Right(sqName,1) exactin "qrbn",Right(sqName,1),"");
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getPromo"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6q"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "q"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getPromo(lTEST_REFERENCE_SQNAME)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getSourceSqNamePACN(pacn:Text):Text=Left(pacn,2);
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getSourceSqNamePACN"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6d5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "c6"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getSourceSqNamePACN(lTEST_REFERENCE_SQNAME)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getTargetSqNamePACN(pacn:Text):Text=Right(Left(pacn,4),2);
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getTargetSqNamePACN"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6d5q"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "d5"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getTargetSqNamePACN(lTEST_REFERENCE_SQNAME)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_createPACN(sourceSqName:Text,targetSqName:Text):Text=sourceSqName & targetSqName;
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_createPACN"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "c6"});
                    UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5q"});
                    UpdateContext({lTEST_PACN: "c6d5q"});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: lTEST_PACN});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_makeMovePACN(board:Text,pacn:Text):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_makeMovePACN"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6d5q"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "#######k#q#################p########################K###########"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_makeMovePACN(lTEST_BOARD, lTEST_PACN)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_FEN_TO_PIECE_PLACEMENT(fen:Text):Text=Index(Split(fen, " "),1).Value;
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_FEN_TO_PIECE_PLACEMENT"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6d5q"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "7k/1q1p4/8/8/8/8/4K3/8"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_FEN_TO_PIECE_PLACEMENT(lTEST_FEN)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_FEN_TO_BOARD(fen:Text):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_FEN_TO_BOARD"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6d5q"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "#######k#q#p########################################K###########"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_FEN_TO_BOARD(lTEST_FEN)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_BOARD_TO_FEN_PIECE_PLACEMENT(board:Text):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_BOARD_TO_FEN_PIECE_PLACEMENT"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6d5q"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "7k/1q1p4/8/8/8/8/4K3/8"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_BOARD_TO_FEN_PIECE_PLACEMENT(lTEST_BOARD)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_FEN_TO_ACTIVE_COLOR(fen:Text):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_FEN_TO_ACTIVE_COLOR"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6d5q"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: BLACK});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_FEN_TO_INACTIVE_COLOR(fen:Text):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_FEN_TO_INACTIVE_COLOR"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6d5q"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: WHITE});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_FEN_TO_INACTIVE_COLOR(lTEST_FEN)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_FEN_TO_CASTLE_RIGHTS_ALL_TEXT(fen:Text):Text=Index(Split(fen, " "),3).Value;
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_FEN_TO_CASTLE_RIGHTS_ALL_TEXT"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6d5q"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "-"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_FEN_TO_CASTLE_RIGHTS_ALL_TEXT(lTEST_FEN)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_FEN_TO_CASTLE_RIGHTS_SPECIFIC_BOOL(fen:Text,color:Number,side:Text):Boolean=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_FEN_TO_CASTLE_RIGHTS_SPECIFIC_BOOL"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6d5q"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_BOOLEAN: false});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_BOOLEAN:
                        UDF_FEN_TO_CASTLE_RIGHTS_SPECIFIC_BOOL(lTEST_FEN, BLACK, "Q")
                    });
                
                    If(lTEST_EXPECTED_RESULT_BOOLEAN<>lTEST_ACTUAL_RESULT_BOOLEAN,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_BOOLEAN &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_BOOLEAN
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_FEN_TO_CASTLE_RIGHTS_SPECIFIC_TEXT(fen:Text,color:Number,side:Text):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_FEN_TO_CASTLE_RIGHTS_SPECIFIC_TEXT"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6d5q"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "-"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_FEN_TO_CASTLE_RIGHTS_SPECIFIC_TEXT(lTEST_FEN, BLACK, "Q")
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_FEN_TO_ENPASSANT_SQNAME(fen:Text):Text=Index(Split(fen, " "),4).Value;
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_FEN_TO_ENPASSANT_SQNAME"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6d5q"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "-"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_FEN_TO_ENPASSANT_SQNAME(lTEST_FEN)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_FEN_TO_HALFMOVE_COUNT(fen:Text):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_FEN_TO_HALFMOVE_COUNT"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6d5q"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 0});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_FEN_TO_HALFMOVE_COUNT(lTEST_FEN)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_FEN_TO_FULLMOVE_COUNT(fen:Text):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_FEN_TO_FULLMOVE_COUNT"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6d5q"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 1});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_FEN_TO_FULLMOVE_COUNT(lTEST_FEN)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_CREATE_CASTLE_RIGHTS(wks:Text,wqs:Text,bks:Text,bqs:Text):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_CREATE_CASTLE_RIGHTS"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6d5q"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "-"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_CREATE_CASTLE_RIGHTS("-", "-", "-", "-")
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_CREATE_FEN(board:Text,activeColor:Number,castleAvail:Text,enpassantSqName:Text,halfmoveClock:Number,fullmoveClock:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_CREATE_FEN"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6d5q"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: lTEST_FEN});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_CREATE_FEN(lTEST_BOARD, BLACK, "-", "-", 0, 1)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_SearchBoardForPiece(board:Text,piece:Text):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_SearchBoardForPiece"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "c6d5q"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 9});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_SearchBoardForPiece(lTEST_BOARD,"q")
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getBitAtSqNum(board:Text,sqNum:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getBitAtSqNum"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "b7"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "q"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getBitAtSqNum(lTEST_BOARD, lTEST_REFERENCE_SQNUM)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getBitsAtSqNum(board:Text,startingSqNum:Number,direction:Number,numberOfSquares:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getBitsAtSqNum"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "b7"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "q#p"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getBitsAtSqNum(lTEST_BOARD, lTEST_REFERENCE_SQNUM, E, 3)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_setBitAtSqNum(board:Text,piece:Text,sqNum:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_setBitAtSqNum"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "b7"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: UDF_FEN_TO_BOARD("7k/1R1p4/8/8/8/8/4K3/8 b - - 0 1")});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_setBitAtSqNum(lTEST_BOARD, "R", lTEST_REFERENCE_SQNUM)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getEPCaptureSqNum(fen:Text):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getEPCaptureSqNum"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 w - h6 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: lTEST_REFERENCE_SQNUM});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getEPCaptureSqNum(lTEST_FEN)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_PieceToColor(piece:Text):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_PieceToColor"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: BLACK});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_PieceToColor("b")
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_ColorToStr(color:Number):Text=If(color=WHITE,"White","Black");
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_ColorToStr"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "b7"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "Black"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_ColorToStr(UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getOppositeColor(color:Number):Number=If(color=WHITE,BLACK,WHITE);
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getOppositeColor"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: BLACK});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getOppositeColor(WHITE)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getACPieceABBR(fen:Text,piece:Text):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getACPieceABBR"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "b7"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "b"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getACPieceABBR(lTEST_FEN, "B")
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getICPieceABBR(fen:Text,piece:Text):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getICPieceABBR"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "b7"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "B"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getICPieceABBR(lTEST_FEN, "B")
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_isPieceAC(fen:Text,piece:Text):Boolean=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_isPieceAC"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "b7"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_BOOLEAN: false});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_BOOLEAN:
                        UDF_isPieceAC(lTEST_FEN, "B")
                    });
                
                    If(lTEST_EXPECTED_RESULT_BOOLEAN<>lTEST_ACTUAL_RESULT_BOOLEAN,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_BOOLEAN &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_BOOLEAN
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_PieceToIcon(piece:Text):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_PieceToIcon"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "b7"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: WHITE_BISHOP_ICON});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_PieceToIcon("B")
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getPieceMaterialValue(piece:Text):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getPieceMaterialValue"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 3});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getPieceMaterialValue("B")
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getPieceCentipawnMaterialValue(piece:Text, filter:Text):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getPieceCentipawnMaterialValue"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 300});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getPieceCentipawnMaterialValue("B", WHITE_PIECES)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_calcCentipawnMaterialValue(fen:Text,filter:Text):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_calcCentipawnMaterialValue"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: -900});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_calcCentipawnMaterialValue(lTEST_FEN, ALL_PIECES)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_isPathClear(fen:Text, sqNum:Number, distance:Number, slideOvers:Text):Boolean=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_isPathClear"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "b7"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_BOOLEAN: true});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_BOOLEAN:
                        UDF_isPathClear(lTEST_FEN, lTEST_REFERENCE_SQNUM, 6, "b6 b5 b4 b3 b2")
                    });
                
                    If(lTEST_EXPECTED_RESULT_BOOLEAN<>lTEST_ACTUAL_RESULT_BOOLEAN,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_BOOLEAN &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_BOOLEAN
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_isSqNumAttackedBySqNum(attackingPiece:Text, attackingSqNum:Number, attackedSqNum:Number):Boolean=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_isSqNumAttackedBySqNum"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "b7"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_BOOLEAN: true});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_BOOLEAN:
                        UDF_isSqNumAttackedBySqNum(UDF_getBitAtSqNum(lTEST_BOARD, lTEST_REFERENCE_SQNUM), lTEST_REFERENCE_SQNUM, UDF_sqNameToSqNum("f3"))
                    });
                
                    If(lTEST_EXPECTED_RESULT_BOOLEAN<>lTEST_ACTUAL_RESULT_BOOLEAN,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_BOOLEAN &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_BOOLEAN
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_countPiecesOnBoard(board:Text, piecesToCount:Text):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_countPiecesOnBoard"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 3});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_countPiecesOnBoard(lTEST_BOARD, BLACK_PIECES)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getOppositeDirection(dir:Number):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getOppositeDirection"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: N});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getOppositeDirection(S)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getDirX(dir:Number):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getDirX"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: -1});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getDirX(SW)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getDirY(dir:Number):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getDirY"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: -1});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getDirY(SW)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getDirX_KNIGHT(dir:Number):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getDirX_KNIGHT"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: -2});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getDirX_KNIGHT(SW)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getDirY_KNIGHT(dir:Number):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getDirY_KNIGHT"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: -1});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getDirY_KNIGHT(SW)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_sqNumToAdjacentSqNames(refSqNum:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_sqNumToAdjacentSqNames"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: UDF_createSqNamesSet("g4 g5 g6 h4 h6")});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_createSqNamesSet(UDF_sqNumToAdjacentSqNamesSet(lTEST_REFERENCE_SQNUM))
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getSetSize(setA:Text):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getSetSize"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 5});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getSetSize(UDF_createSqNamesSet("g4 g5 g6 h4 h6"))
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_createSqNamesSet(sqNameList:Text):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_createSqNamesSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "g4 g5 g6 h4 h6"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_createSqNamesSet("        g6 h4    g4 g5 h6      ")
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getElementFromSet(setA:Text, index:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getElementFromSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "g6"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getElementFromSet(UDF_createSqNamesSet("        g6 h4    g4 g5 h6      "), 3)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_sqNumToAdjacentSqNamesSet(refSqNum:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_sqNumToAdjacentSqNamesSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "g4 g5 g6 h4 h6"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_sqNumToAdjacentSqNamesSet(lTEST_REFERENCE_SQNUM)
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getSetDifference(setA:Text, setB:Text):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getSetDifference"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "g5 g6 h4"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getSetDifference("g4 g5 g6 h4 h6", "g4 h6")
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getSetIntersection(setA:Text, setB:Text):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getSetIntersection"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "g4 h6"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getSetIntersection("g4 g5 g6 h4 h6", "a1 g4 h6")
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getSetUnion(setA:Text, setB:Text):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getSetUnion"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "a1 g4 g5 g6 h4 h6"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getSetUnion("g4 g5 g6 h4 h6", "a1 g4 h6")
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getSetComplement(setA:Text):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getSetComplement"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "h5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "e1 e2 e3 e4 e5 e6 e7 e8 f1 f2 f3 f4 f5 f6 f7 f8 g1 g2 g3 g4 g5 g6 g7 g8 h1 h2 h3 h4 h5 h6 h7 h8"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getSetComplement("a1 a2 a3 a4 a5 a6 a7 a8 b1 b2 b3 b4 b5 b6 b7 b8 c1 c2 c3 c4 c5 c6 c7 c8 d1 d2 d3 d4 d5 d6 d7 d8")
                    });
                        
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getSetofSqNamesInBox(refSqName1:Text, refSqName2:Text):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getSetofSqNamesInBox"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "b7"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "b5 b6 b7 c5 c6 c7 d5 d6 d7"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getSetofSqNamesInBox(lTEST_REFERENCE_SQNAME, lTEST_REFERENCE_SQNAME2)
                    });
                        
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_sqNumToFileSet(refSqNum:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_sqNumToFileSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "b6"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "b1 b2 b3 b4 b5 b6 b7 b8"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_sqNumToFileSet(lTEST_REFERENCE_SQNUM)
                    });
                        
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_sqNumToRankSet(refSqNum:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_sqNumToRankSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "b6"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "a6 b6 c6 d6 e6 f6 g6 h6"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_sqNumToRankSet(lTEST_REFERENCE_SQNUM)
                    });
                        
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_sqNumToRookSet(refSqNum:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_sqNumToRookSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "b6"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: UDF_createSqNamesSet("b1 b2 b3 b4 b5 b6 b7 b8 a6 b6 c6 d6 e6 f6 g6 h6")});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_sqNumToRookSet(lTEST_REFERENCE_SQNUM)
                    });
                        
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_sqNumToKingSet(refSqNum:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_sqNumToKingSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "b5"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: UDF_createSqNamesSet("a4 a5 a6 b4 b5 b6 c4 c5 c6")});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_sqNumToKingSet(lTEST_REFERENCE_SQNUM)
                    });
                        
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_occupiedSqNamesSet(board:Text, sqNameFilter:Text, pieceFilter:Text):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_occupiedSqNamesSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "b5"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "b7"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_occupiedSqNamesSet(lTEST_BOARD, UNIVERSAL_SQNAMES_SET, "q")
                    });
                        
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_sqNumToAdjacentSqNamesSet(refSqNum:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_sqNumToAdjacentSqNamesSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "b7"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: UDF_createSqNamesSet("a6 a7 a8 b6 b8 c6 c7 c8")});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_sqNumToAdjacentSqNamesSet(lTEST_REFERENCE_SQNUM)
                    });
                        
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_isSqNumPAWNAttacked(board:Text, refSqNum:Number, attackingColor:Number):Boolean=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_isSqNumPAWNAttacked"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_BOOLEAN: true});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_BOOLEAN:
                        UDF_isSqNumPAWNAttacked(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_BOOLEAN<>lTEST_ACTUAL_RESULT_BOOLEAN,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_BOOLEAN &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_BOOLEAN
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_isSqNumKNIGHTAttacked(board:Text, refSqNum:Number, attackingColor:Number):Boolean=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_isSqNumKNIGHTAttacked"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q6/8/6Pp/8/8/4K3/8 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_BOOLEAN: false});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_BOOLEAN:
                        UDF_isSqNumKNIGHTAttacked(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_BOOLEAN<>lTEST_ACTUAL_RESULT_BOOLEAN,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_BOOLEAN &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_BOOLEAN
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_isSqNumROOKAttacked(board:Text, refSqNum:Number, attackingColor:Number):Boolean=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_isSqNumROOKAttacked"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_BOOLEAN: true});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_BOOLEAN:
                        UDF_isSqNumROOKAttacked(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_BOOLEAN<>lTEST_ACTUAL_RESULT_BOOLEAN,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_BOOLEAN &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_BOOLEAN
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_isSqNumBISHOPAttacked(board:Text, refSqNum:Number, attackingColor:Number):Boolean=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_isSqNumBISHOPAttacked"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_BOOLEAN: true});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_BOOLEAN:
                        UDF_isSqNumBISHOPAttacked(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_BOOLEAN<>lTEST_ACTUAL_RESULT_BOOLEAN,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_BOOLEAN &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_BOOLEAN
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_isSqNumQUEENAttacked(board:Text, refSqNum:Number, attackingColor:Number):Boolean=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_isSqNumQUEENAttacked"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_BOOLEAN: false});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_BOOLEAN:
                        UDF_isSqNumQUEENAttacked(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_BOOLEAN<>lTEST_ACTUAL_RESULT_BOOLEAN,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_BOOLEAN &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_BOOLEAN
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_isSqNumKINGAttacked(board:Text, refSqNum:Number, attackingColor:Number):Boolean=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_isSqNumKINGAttacked"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_BOOLEAN: false});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_BOOLEAN:
                        UDF_isSqNumKINGAttacked(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_BOOLEAN<>lTEST_ACTUAL_RESULT_BOOLEAN,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_BOOLEAN &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_BOOLEAN
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_isSqNumAttacked(board:Text, refSqNum:Number, attackingColor:Number):Boolean=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_isSqNumAttacked"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_BOOLEAN: true});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_BOOLEAN:
                        UDF_isSqNumAttacked(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_BOOLEAN<>lTEST_ACTUAL_RESULT_BOOLEAN,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_BOOLEAN &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_BOOLEAN
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_isSqNumProtected(board:Text, refSqNum:Number, protectingColor:Number):Boolean=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_isSqNumProtected"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_BOOLEAN: true});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_BOOLEAN:
                        UDF_isSqNumProtected(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_BOOLEAN<>lTEST_ACTUAL_RESULT_BOOLEAN,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_BOOLEAN &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_BOOLEAN
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getHangingSquareNamesSet(board:Text, hangingPiecesColor:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getHangingSquareNamesSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "4k3/5p2/6p1/8/2P5/1P6/8/4K3 w - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: UDF_createSqNamesSet("b3 e1")});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getHangingSquareNamesSet(lTEST_BOARD, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_countSqNumPAWNAttacks(board:Text, refSqNum:Number, attackingColor:Number):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_countSqNumPAWNAttacks"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 1});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_countSqNumPAWNAttacks(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_countSqNumKNIGHTAttacks(board:Text, refSqNum:Number, attackingColor:Number):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_countSqNumKNIGHTAttacks"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 0});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_countSqNumKNIGHTAttacks(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_countSqNumROOKAttacks(board:Text, refSqNum:Number, attackingColor:Number):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_countSqNumROOKAttacks"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 1});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_countSqNumROOKAttacks(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_countSqNumBISHOPAttacks(board:Text, refSqNum:Number, attackingColor:Number):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_countSqNumBISHOPAttacks"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 1});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_countSqNumBISHOPAttacks(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_countSqNumQUEENAttacks(board:Text, refSqNum:Number, attackingColor:Number):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_countSqNumQUEENAttacks"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 0});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_countSqNumQUEENAttacks(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_countSqNumKINGAttacks(board:Text, refSqNum:Number, attackingColor:Number):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_countSqNumKINGAttacks"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 0});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_countSqNumKINGAttacks(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_countSqNumAttacks(board:Text, refSqNum:Number, attackingColor:Number):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_countSqNumAttacks"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 3});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_countSqNumAttacks(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getPAWNAttackerSqNamesSet(board:Text, refSqNum:Number, attackingColor:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getPAWNAttackerSqNamesSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "h5"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getPAWNAttackerSqNamesSet(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getKNIGHTAttackerSqNamesSet(board:Text, refSqNum:Number, attackingColor:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getKNIGHTAttackerSqNamesSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: ""});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getKNIGHTAttackerSqNamesSet(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getROOKAttackerSqNamesSet(board:Text, refSqNum:Number, attackingColor:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getROOKAttackerSqNamesSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "g1"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getROOKAttackerSqNamesSet(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getBISHOPAttackerSqNamesSet(board:Text, refSqNum:Number, attackingColor:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getBISHOPAttackerSqNamesSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "c8"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getBISHOPAttackerSqNamesSet(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getQUEENAttackerSqNamesSet(board:Text, refSqNum:Number, attackingColor:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getQUEENAttackerSqNamesSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: ""});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getQUEENAttackerSqNamesSet(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getKINGAttackerSqNamesSet(board:Text, refSqNum:Number, attackingColor:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getKINGAttackerSqNamesSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: ""});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getKINGAttackerSqNamesSet(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getAttackerSqNamesSet(board:Text, refSqNum:Number, attackingColor:Number):Text=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getAttackerSqNamesSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    //UpdateContext({lTEST_REFERENCE_SQNAME2: "d5"});
                
                    //UpdateContext({lTEST_REFERENCE_SOURCE_SQNAME: "d7"});
                    //UpdateContext({lTEST_REFERENCE_TARGET_SQNAME: "d5"});
                    //UpdateContext({lTEST_PACN: UDF_createPACN(lTEST_REFERENCE_SOURCE_SQNAME, lTEST_REFERENCE_TARGET_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: UDF_createSqNamesSet("h5 g1 c8")});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getAttackerSqNamesSet(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                        
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getQUEENAttackerSqNamesSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "b7"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getQUEENAttackerSqNamesSet(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getAttackerSqNamesSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_TEXT: "b7 d7"});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_TEXT:
                        UDF_getAttackerSqNamesSet(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                
                    If(lTEST_EXPECTED_RESULT_TEXT<>lTEST_ACTUAL_RESULT_TEXT,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_TEXT &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_TEXT
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getSqNumAttackersMinMaterialCentipawn(board:Text, refSqNum:Number, attackingColor:Number):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getSqNumAttackersMinMaterialCentipawn"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6Pp/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: -900});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getSqNumAttackersMinMaterialCentipawn(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getSqNumAttackersMinMaterialCentipawn(board:Text, refSqNum:Number, attackingColor:Number):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getSqNumAttackersMinMaterialCentipawn"});
                    //UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "7k/1q1p4/8/8/8/8/4K3/8 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "c6"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: -100});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getSqNumAttackersMinMaterialCentipawn(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_getSqNumAttackersMinMaterialCentipawn(board:Text, refSqNum:Number, attackingColor:Number):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_getSqNumAttackersMinMaterialCentipawn"});
                    //UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "2b4k/1q6/8/6P1/8/8/4K3/6r1 b - - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: -300});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_getSqNumAttackersMinMaterialCentipawn(lTEST_BOARD, lTEST_REFERENCE_SQNUM, UDF_FEN_TO_ACTIVE_COLOR(lTEST_FEN))
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_minMaterialCentipawnValueFromSet(board:Text, setA:Text, colorFilter:Number):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_minMaterialCentipawnValueFromSet"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: 100});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_minMaterialCentipawnValueFromSet(lTEST_BOARD, UNIVERSAL_SQNAMES_SET, WHITE)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_minMaterialCentipawnValueFromSet(board:Text, setA:Text, colorFilter:Number):Number=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_minMaterialCentipawnValueFromSet"});
                    //UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    UpdateContext({lTEST_FEN: "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1"});
                    UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_NUMBER: -100});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_NUMBER:
                        UDF_minMaterialCentipawnValueFromSet(lTEST_BOARD, UNIVERSAL_SQNAMES_SET, BLACK)
                    });
                
                    If(lTEST_EXPECTED_RESULT_NUMBER<>lTEST_ACTUAL_RESULT_NUMBER,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_NUMBER &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_NUMBER
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_isPieceinStartingPosition(piece:Text, sqNum:Number):Boolean=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_isPieceinStartingPosition"});
                    UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_BOOLEAN: true});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_BOOLEAN:
                        UDF_isPieceinStartingPosition("n", 1)
                    });
                
                    If(lTEST_EXPECTED_RESULT_BOOLEAN<>lTEST_ACTUAL_RESULT_BOOLEAN,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_BOOLEAN &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_BOOLEAN
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_isPieceinStartingPosition(piece:Text, sqNum:Number):Boolean=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_isPieceinStartingPosition"});
                    //UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_BOOLEAN: true});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_BOOLEAN:
                        UDF_isPieceinStartingPosition("N", 62)
                    });
                
                    If(lTEST_EXPECTED_RESULT_BOOLEAN<>lTEST_ACTUAL_RESULT_BOOLEAN,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_BOOLEAN &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_BOOLEAN
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_isPieceinStartingPosition(piece:Text, sqNum:Number):Boolean=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_isPieceinStartingPosition"});
                    //UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_BOOLEAN: false});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_BOOLEAN:
                        UDF_isPieceinStartingPosition("P", 62)
                    });
                
                    If(lTEST_EXPECTED_RESULT_BOOLEAN<>lTEST_ACTUAL_RESULT_BOOLEAN,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_BOOLEAN &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_BOOLEAN
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(!lTEST_FAILURE_DETECTED,
                    // UDF_isPieceinStartingPosition(piece:Text, sqNum:Number):Boolean=
                    UpdateContext({lTEST_TEST_CATEGORY: "UDF_isPieceinStartingPosition"});
                    //UpdateContext({lTEST_TEST_NUMBER: 0});
                    UpdateContext({lTEST_TEST_NUMBER: lTEST_TEST_NUMBER + 1});
                
                    //UpdateContext({lTEST_FEN: "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1"});
                    //UpdateContext({lTEST_BOARD: UDF_FEN_TO_BOARD(lTEST_FEN)});
                    //UpdateContext({lTEST_REFERENCE_SQNAME: "g4"});
                    //UpdateContext({lTEST_REFERENCE_SQNUM: UDF_sqNameToSqNum(lTEST_REFERENCE_SQNAME)});
                
                    UpdateContext({lTEST_EXPECTED_RESULT_BOOLEAN: false});
                
                    UpdateContext({lTEST_ACTUAL_RESULT_BOOLEAN:
                        UDF_isPieceinStartingPosition("P", 55)
                    });
                
                    If(lTEST_EXPECTED_RESULT_BOOLEAN<>lTEST_ACTUAL_RESULT_BOOLEAN,
                        // THEN 
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " FAILED" &
                                " RESULTS EXPECTED: " & lTEST_EXPECTED_RESULT_BOOLEAN &
                                " ACTUAL: " & lTEST_ACTUAL_RESULT_BOOLEAN
                            })
                        );
                        UpdateContext({lTEST_FAILURE_DETECTED: true}),
                
                        // ELSE
                        If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                            Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                                " btnRunUDFDiagnostics.OnSelect(): " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER & " PASSED"
                            })
                        )
                    )
                );
                
                If(lTEST_FAILURE_DETECTED,
                    // THEN
                    If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                        Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                            " btnRunUDFDiagnostics.OnSelect(): FAILURE " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER
                        })
                    );
                    UpdateContext({lUDF_DIAGNOSTICS_RESULT: "FAILURE " & lTEST_TEST_CATEGORY & " test #: " & lTEST_TEST_NUMBER}),
                
                    // ELSE
                    UpdateContext({lUDF_DIAGNOSTICS_RESULT: "PASSED"})
                );
                
                If(gblPF_DEBUG_UDF_DIAGNOSTICS,
                    Collect(colPF_logs, {logOffset: GET_LOG_INDEX, logEntry: Text(Now(), "mm/dd/yyyy hh:mm:ss.fff") &
                        " btnRunUDFDiagnostics.OnSelect(): exiting"
                        
                    })
                );
            Size: =10
            Text: ="Run UDF Diagnostics"
            X: =40
            Y: =40
            ZIndex: =2

        btnGotoChessBoard As button:
            OnSelect: =Navigate(Chess_Board)
            Size: =12
            Text: ="Goto Chess Board"
            X: =1200
            Y: =664
            ZIndex: =3

        btnGotoLogsFromDiagnostics As button:
            OnSelect: =Navigate(Logging_Screen)
            Size: =12
            Text: ="Goto Logs"
            X: =1200
            Y: =715
            ZIndex: =4

        lblBoardResult As label:
            BorderThickness: =1
            Font: =Font.'Courier New'
            Height: =30
            Size: =10
            Text: |
                =If(CountRows(Split(txtFenToConvert.Text, " "))<>6,
                    // THEN
                    "",
                
                    // ELSE
                    UDF_FEN_TO_BOARD(txtFenToConvert.Text)
                )
            Width: =1000
            X: =lblFenToBoardHeader.X + lblFenToBoardHeader.Width + 5
            Y: =txtFenToConvert.Y + txtFenToConvert.Height
            ZIndex: =7

        txtFenToConvert As text:
            Default: ="FEN to convert"
            Font: =Font.'Courier New'
            Height: =25
            PaddingLeft: =5
            Size: =10
            Width: =1000
            X: =lblFenToBoardHeader.X + lblFenToBoardHeader.Width + 5
            Y: =lblFenToBoardHeader.Y - 5
            ZIndex: =8

        lblFenToBoardHeader As label:
            Align: =Align.Center
            Size: =12
            Text: ="FEN to Board"
            Width: =btnRunUDFDiagnostics.Width
            X: =btnRunUDFDiagnostics.X
            Y: =btnRunUDFDiagnostics.Y + btnRunUDFDiagnostics.Height + 10
            ZIndex: =9

        lblBoardToPPD As label:
            Align: =Align.Center
            Size: =12
            Text: ="Board to PPD"
            Width: =btnRunUDFDiagnostics.Width
            X: =45
            Y: =160
            ZIndex: =10

        txtBoardToConvert As text:
            Default: ="Board to convert"
            Font: =Font.'Courier New'
            Height: =25
            PaddingLeft: =5
            Size: =10
            Width: =1000
            X: =205
            Y: =160
            ZIndex: =11

        lblPPDResult As label:
            BorderThickness: =1
            Font: =Font.'Courier New'
            Height: =30
            Size: =10
            Text: |
                =If(CountRows(Split(txtBoardToConvert.Text, " "))<>1 || Len(txtBoardToConvert.Text)<>64,
                    // THEN
                    "",
                
                    // ELSE
                    UDF_BOARD_TO_FEN_PIECE_PLACEMENT(txtBoardToConvert.Text)
                )
            Width: =1000
            X: =205
            Y: =185
            ZIndex: =12

